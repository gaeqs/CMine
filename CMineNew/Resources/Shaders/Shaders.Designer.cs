//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMineNew.Resources.Shaders {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Shaders {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Shaders() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CMineNew.Resources.Shaders.Shaders", typeof(Shaders).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400 core
        ///
        ///in vec3 fragPos, fragNormal;
        ///in vec2 fragTexCoord;
        ///
        ///layout (location = 0) out vec4 gAmbient;
        ///layout (location = 1) out vec4 gDiffuse;
        ///layout (location = 2) out vec4 gSpecular;
        ///layout (location = 3) out vec3 gPosition;
        ///layout (location = 4) out vec4 gNormal;
        ///
        ///uniform sampler2D sampler;
        ///
        ///void main() {
        ///    gAmbient = vec4(texture(sampler, fragTexCoord).rgb, 1);
        ///    gDiffuse = vec4(0, 0, 0, 1);
        ///    gSpecular = vec4(0, 0, 0, 1);
        ///    gPosition = fragPos;
        ///    gNormal = vec4(fra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string block_fragment {
            get {
                return ResourceManager.GetString("block_fragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400 core
        ///
        ///in vec3 fragPos;
        ///
        ///layout (location = 0) out vec4 gAmbient;
        ///layout (location = 1) out vec4 gDiffuse;
        ///layout (location = 2) out vec4 gSpecular;
        ///layout (location = 3) out vec3 gPosition;
        ///layout (location = 4) out vec4 gNormal;
        ///
        ///void main() {
        ///    gAmbient = vec4(0, 0, 0, 1);
        ///    gDiffuse = vec4(0, 0, 0, 1);
        ///    gSpecular = vec4(0, 0, 0, 1);
        ///    gPosition = fragPos;
        ///    gNormal = vec4(0, 1, 0, 0);
        ///}.
        /// </summary>
        internal static string block_lines_fragment {
            get {
                return ResourceManager.GetString("block_lines_fragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400 core
        ///
        ///layout (location = 0) in vec3 position;
        ///
        ///out vec3 fragPos;
        ///
        ///uniform mat4 viewProjection;
        ///uniform vec3 worldPosition;
        ///
        ///void main () {
        ///    mat4 model = mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, worldPosition.x, worldPosition.y, worldPosition.z, 1);
        ///    vec4 modelPosition = model * vec4(position, 1);
        ///    gl_Position = viewProjection * modelPosition;
        ///    gl_Position.z -= 0.001;
        ///    fragPos = modelPosition.xyz;
        ///}
        ///.
        /// </summary>
        internal static string block_lines_vertex {
            get {
                return ResourceManager.GetString("block_lines_vertex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400 core
        ///
        ///layout (location = 0) in vec3 position;
        ///layout (location = 1) in vec3 normal;
        ///layout (location = 2) in vec2 texturePosition;
        ///layout (location = 3) in vec3 worldPosition;
        ///layout (location = 4) in vec4 textureArea;
        ///
        ///out vec3 fragPos, fragNormal;
        ///out vec2 fragTexCoord;
        ///
        ///uniform mat4 viewProjection;
        ///
        ///void main () {
        ///    mat4 model = mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, worldPosition.x, worldPosition.y, worldPosition.z, 1);
        ///    vec4 modelPosition = model * vec4(position, 1);        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string block_vertex {
            get {
                return ResourceManager.GetString("block_vertex", resourceCulture);
            }
        }
    }
}
